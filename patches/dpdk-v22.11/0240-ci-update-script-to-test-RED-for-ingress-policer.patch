From e4636ffb50c0eb50a04271699f28b499dd742125 Mon Sep 17 00:00:00 2001
From: Rakesh Kudurumalla <rkudurumalla@marvell.com>
Date: Wed, 21 Dec 2022 18:03:37 +0530
Subject: [PATCH 240/955] ci: update script to test RED for ingress policer

This script creates meter and configures RED action
to the queues attached to meter and verifies the
same by reding from ingress_policer_ctx

Signed-off-by: Rakesh Kudurumalla <rkudurumalla@marvell.com>
Change-Id: I4ebce78f7d32c402efc3de3113aa1561424c9626
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/dataplane/dpdk/+/93229
Tested-by: sa_ip-toolkits-Jenkins <sa_ip-toolkits-jenkins@marvell.com>
Reviewed-by: Jerin Jacob Kollanukkaran <jerinj@marvell.com>
---
 .../policer_test/cnxk_ingress_policer.sh      | 175 +++++++++++++-----
 1 file changed, 128 insertions(+), 47 deletions(-)

diff --git a/marvell-ci/test/cnxk-tests/policer_test/cnxk_ingress_policer.sh b/marvell-ci/test/cnxk-tests/policer_test/cnxk_ingress_policer.sh
index 9fe76bd648c04..7bb2a98a725cc 100755
--- a/marvell-ci/test/cnxk-tests/policer_test/cnxk_ingress_policer.sh
+++ b/marvell-ci/test/cnxk-tests/policer_test/cnxk_ingress_policer.sh
@@ -8,6 +8,7 @@ CNXKTESTPATH="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )/.."
 
 source $CNXKTESTPATH/common/testpmd/common.env
 
+
 PRFX="pktgen"
 CAP_PRFX="dut"
 TXPORT="0002:01:00.2"
@@ -15,6 +16,24 @@ RXPORT="0002:01:00.1"
 COREMASK="0xC"
 CAP_COREMASK="0x3"
 
+if [[ -d /sys/bus/pci/drivers/octeontx2-nicvf ]]; then
+	NICVF="octeontx2-nicvf"
+else
+	NICVF="rvu_nicvf"
+fi
+
+if [ -f $CNXKTESTPATH/../board/oxk-devbind-basic.sh ]
+then
+        VFIO_DEVBIND="$CNXKTESTPATH/../board/oxk-devbind-basic.sh"
+else
+        VFIO_DEVBIND=$(which oxk-devbind-basic.sh)
+        if [[ -z $VFIO_DEVBIND ]]; then
+                echo "oxk-devbind-basic.sh not found !!"
+                exit 1
+        fi
+fi
+
+
 function sig_handler()
 {
 	local status=$?
@@ -34,56 +53,101 @@ function sig_handler()
 	exit $status
 }
 
+trap "sig_handler ERR" ERR
+trap "sig_handler INT" INT
+trap "sig_handler QUIT" QUIT
+trap "sig_handler EXIT" EXIT
+
 
 function ingress_policer_test()
 {
 	if [ "$1" == "level_3" ]; then
-		testpmd_cmd "add port meter profile srtcm_rfc2697 0 100 1000000000 5000 10000 0"
-		testpmd_cmd "add port meter policy 0 200 g_actions void / end y_actions drop / end r_actions drop / end"
-		testpmd_cmd "create port meter 0 300 100 200 yes 0 0 0"
-		testpmd_cmd "add port meter policy 0 201 g_actions meter mtr_id 300 / end y_actions drop / end r_actions drop / end"
-		testpmd_cmd "create port meter 0 301 100 201 yes 0 0 0"
-		testpmd_cmd "add port meter policy 0 202 g_actions meter mtr_id 300 / end y_actions drop / end r_actions drop / end"
-		testpmd_cmd "create port meter 0 302 100 202 yes 0 0 0"
-		testpmd_cmd "add port meter policy 0 203 g_actions meter mtr_id 301 / end y_actions drop / end r_actions drop / end"
-		testpmd_cmd "create port meter 0 303 100 203 yes 0 0 0"
-		testpmd_cmd "add port meter policy 0 204 g_actions meter mtr_id 301 / end y_actions drop / end r_actions drop / end"
-		testpmd_cmd "create port meter 0 304 100 204 yes 0 0 0"
-		testpmd_cmd "add port meter policy 0 205 g_actions meter mtr_id 302 / end y_actions drop / end r_actions drop / end"
-		testpmd_cmd "create port meter 0 305 100 205 yes 0 0 0"
-		testpmd_cmd "add port meter policy 0 206 g_actions meter mtr_id 302 / end y_actions drop / end r_actions drop / end"
-		testpmd_cmd "create port meter 0 306 100 206 yes 0 0 0"
-		testpmd_cmd "flow create 0 ingress pattern eth / end actions meter mtr_id 303 / queue index 0 / end"
-		testpmd_cmd "flow create 0 ingress pattern eth / end actions meter mtr_id 304 / queue index 1 / end"
-		testpmd_cmd "flow create 0 ingress pattern eth / end actions meter mtr_id 305 / queue index 2 / end"
-		testpmd_cmd "flow create 0 ingress pattern eth / end actions meter mtr_id 306 / queue index 3 / end"
+		testpmd_cmd $CAP_PRFX "add port meter profile srtcm_rfc2697 0 100 1000000000 5000 10000 0"
+		testpmd_cmd $CAP_PRFX "add port meter policy 0 200 g_actions void / end y_actions drop / end r_actions drop / end"
+		testpmd_cmd $CAP_PRFX "create port meter 0 300 100 200 yes 0 0 g 0"
+		testpmd_cmd $CAP_PRFX "add port meter policy 0 201 g_actions meter mtr_id 300 / end y_actions drop / end r_actions drop / end"
+		testpmd_cmd $CAP_PRFX "create port meter 0 301 100 201 yes 0 0 g 0"
+		testpmd_cmd $CAP_PRFX "add port meter policy 0 202 g_actions meter mtr_id 300 / end y_actions drop / end r_actions drop / end"
+		testpmd_cmd $CAP_PRFX "create port meter 0 302 100 202 yes 0 0 g 0"
+		testpmd_cmd $CAP_PRFX "add port meter policy 0 203 g_actions meter mtr_id 301 / end y_actions drop / end r_actions drop / end"
+		testpmd_cmd $CAP_PRFX "create port meter 0 303 100 203 yes 0 0 g 0"
+		testpmd_cmd $CAP_PRFX "add port meter policy 0 204 g_actions meter mtr_id 301 / end y_actions drop / end r_actions drop / end"
+		testpmd_cmd $CAP_PRFX "create port meter 0 304 100 204 yes 0 0 g 0"
+		testpmd_cmd $CAP_PRFX "add port meter policy 0 205 g_actions meter mtr_id 302 / end y_actions drop / end r_actions drop / end"
+		testpmd_cmd $CAP_PRFX "create port meter 0 305 100 205 yes 0 0 g 0"
+		testpmd_cmd $CAP_PRFX "add port meter policy 0 206 g_actions meter mtr_id 302 / end y_actions drop / end r_actions drop / end"
+		testpmd_cmd $CAP_PRFX "create port meter 0 306 100 206 yes 0 0 g 0"
+		testpmd_cmd $CAP_PRFX "flow create 0 ingress pattern eth / end actions meter mtr_id 303 / queue index 0 / end"
+		testpmd_cmd $CAP_PRFX "flow create 0 ingress pattern eth / end actions meter mtr_id 304 / queue index 1 / end"
+		testpmd_cmd $CAP_PRFX "flow create 0 ingress pattern eth / end actions meter mtr_id 305 / queue index 2 / end"
+		testpmd_cmd $CAP_PRFX "flow create 0 ingress pattern eth / end actions meter mtr_id 306 / queue index 3 / end"
 
 	fi
 
 	if [ "$1" == "level_1" ]; then
-		testpmd_cmd "add port meter profile srtcm_rfc2697 0 100 1000000000 5000 10000 0"
-		testpmd_cmd "add port meter policy 0 200 g_actions void / end y_actions drop / end r_actions drop / end"
-		testpmd_cmd "create port meter 0 300 100 200 yes 0 0 0"
-		testpmd_cmd "flow create 0 ingress pattern eth / end actions meter mtr_id 300 / queue index 1 / end"
+		testpmd_cmd $CAP_PRFX "add port meter profile srtcm_rfc2697 0 100 1000000000 5000 10000 0"
+		testpmd_cmd $CAP_PRFX "add port meter policy 0 200 g_actions void / end y_actions drop / end r_actions drop / end"
+		testpmd_cmd $CAP_PRFX "create port meter 0 300 100 200 yes 0 0 g 0"
+		testpmd_cmd $CAP_PRFX "flow create 0 ingress pattern eth / end actions meter mtr_id 300 / queue index 0 / end"
 	fi
 
-	testpmd_cmd $CAP_PRFX "port start all"
-	testpmd_cmd $CAP_PRFX "start"
-	sleep 5
-	testpmd_cmd $CAP_PRFX "show port stats all"
-	sleep 1
-	testpmd_cmd $CAP_PRFX "show port stats all"
-	sleep 1
-	testpmd_rxbps_stats $CAP_PRFX
+	if [ "$1" == "test_red" ]; then
+		testpmd_cmd $CAP_PRFX "set port cman config 0 0 obj queue mode red 10 20 1"
+		testpmd_cmd $CAP_PRFX "add port meter profile srtcm_rfc2697 0 100 1000000000 5000 10000 0"
+		testpmd_cmd $CAP_PRFX "add port meter policy 0 200 g_actions void / end y_actions drop / end r_actions drop / end"
+		testpmd_cmd $CAP_PRFX "create port meter 0 300 100 200 yes 0 0 g 0"
+		testpmd_cmd $CAP_PRFX "flow create 0 ingress pattern eth / end actions meter mtr_id 300 / queue index 0 / end"
+		sleep 2
+
+	fi
+
+	if [ "$1" == "test_red" ]; then
+		testpmd_red_configuration
+	else
+
+		testpmd_cmd $CAP_PRFX "start"
+		sleep 5
+		testpmd_cmd $CAP_PRFX "show port stats all"
+		sleep 1
+		testpmd_cmd $CAP_PRFX "show port stats all"
+		sleep 1
+		testpmd_rxbps_stats $CAP_PRFX
+	fi
 }
 
+function testpmd_red_configuration()
+{
+	local debug_dir
+
+	debug_dir="/sys/kernel/debug/octeontx2"
+	if [[ -d /sys/kernel/debug/cn10k ]]; then
+		debug_dir="/sys/kernel/debug/cn10k"
+	fi
+
+	ingress_policer_ctx="$debug_dir/nix/ingress_policer_ctx"
+
+	if $SUDO test -f "$ingress_policer_ctx"; then
+		action=$(echo "`$SUDO cat $ingress_policer_ctx`" | grep "rc_action" \
+				| awk '{print $3}')
+		if [ "$action" == "RED" ]; then
+			echo "RED action for policer is success"
+		else
+			echo "RED action for policer failed"
+		fi
+	else
+		echo "$ingress_policer_ctx is not available"
+		exit 1
+	fi
+
+
+}
 function testpmd_rxbps_stats()
 {
 	local prefix=$1
 	local out=testpmd.out.$prefix
 
 	val=`cat $out | grep "Rx-bps:" | awk -e '{print $4}' | tail -1`
-	if [[ $val -le 8000000000 && $val -ge 7800000000 ]] ;then
+	if [[ $val -le 8000000000 && $val -ge 7700000000 ]] ;then
 		echo "Ingress policy $1 success"
 	else
 		echo "Ingress policy $1 failed"
@@ -91,26 +155,43 @@ function testpmd_rxbps_stats()
 	fi
 }
 
-trap "sig_handler ERR" ERR
-trap "sig_handler INT" INT
-trap "sig_handler QUIT" QUIT
-trap "sig_handler EXIT" EXIT
-
-
-echo "Testpmd running with $PORT0, Coremask=$COREMASK"
+function run_testpmd()
+{
+	echo "Testpmd running with Coremask=$COREMASK"
 
-testpmd_launch $PRFX \
-	"-c $COREMASK -a $TXPORT" \
-	"--no-flush-rx --nb-cores=1 --forward-mode=txonly --txonly-multi-flow"
+	testpmd_launch $PRFX \
+		"-l 0-4 -a $TXPORT" \
+		"--no-flush-rx --nb-cores=4 --forward-mode=txonly --txonly-multi-flow --txq=4 --rxq=4"
 
-testpmd_cmd $PRFX "start"
+	testpmd_cmd $PRFX "start"
 
-# Launch capture testpmd
-testpmd_launch $CAP_PRFX \
-	"-c $CAP_COREMASK -a $RXPORT" \
-        "--no-flush-rx --nb-cores=1 --forward-mode=rxonly"
+	# Launch capture testpmd
+	testpmd_launch $CAP_PRFX \
+		"-l 5-10 -a $RXPORT" \
+        	"--no-flush-rx --nb-cores=4 --forward-mode=rxonly --txq=4 --rxq=4"
+}
 
 echo "Ingress policer with 4 leaf nodes 2 mid nodes 1 root node"
+run_testpmd
+sleep 1
 ingress_policer_test level_3
+
+testpmd_cmd $PRFX "quit"
+sleep 1
+testpmd_cmd $CAP_PRFX "quit"
+sleep 1
+
 echo "Ingress policer with single node"
+run_testpmd
+sleep 1
 ingress_policer_test level_1
+
+testpmd_cmd $PRFX "quit"
+sleep 1
+testpmd_cmd $CAP_PRFX "quit"
+sleep 2
+
+echo "Configure RED to meter"
+run_testpmd
+sleep 1
+ingress_policer_test test_red
-- 
2.25.1

