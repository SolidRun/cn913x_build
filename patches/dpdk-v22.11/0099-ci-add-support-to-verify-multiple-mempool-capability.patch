From 730e0a200036f20adcef3b9ed0fdb30bb3dbf717 Mon Sep 17 00:00:00 2001
From: Hanumanth Pothula <hpothula@marvell.com>
Date: Wed, 21 Dec 2022 02:36:12 +0530
Subject: [PATCH 099/955] ci: add support to verify multiple mempool capability

Add ci test case to verify multi-mempool capability.

Signed-off-by: Hanumanth Pothula <hpothula@marvell.com>
Change-Id: I5ec72bb9de052d8ec5a52998238e25bed988a130
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/dataplane/dpdk/+/93181
Tested-by: sa_ip-toolkits-Jenkins <sa_ip-toolkits-jenkins@marvell.com>
Reviewed-by: Ashwin Sekhar T K <asekhar@marvell.com>
Reviewed-by: Nithin Kumar Dabilpuram <ndabilpuram@marvell.com>
---
 marvell-ci/test/cnxk-tests/meson.build        |   1 +
 .../multi_mempool/cnxk_multi_mempool.sh       | 148 ++++++++++++++++++
 .../test/cnxk-tests/multi_mempool/in.pcap     | Bin 0 -> 4680 bytes
 .../test/cnxk-tests/multi_mempool/meson.build |  33 ++++
 marvell-ci/test/env/cn9k.env                  |   1 +
 5 files changed, 183 insertions(+)
 create mode 100755 marvell-ci/test/cnxk-tests/multi_mempool/cnxk_multi_mempool.sh
 create mode 100644 marvell-ci/test/cnxk-tests/multi_mempool/in.pcap
 create mode 100644 marvell-ci/test/cnxk-tests/multi_mempool/meson.build

diff --git a/marvell-ci/test/cnxk-tests/meson.build b/marvell-ci/test/cnxk-tests/meson.build
index 50ae6f86b97e6..25df2977bc815 100644
--- a/marvell-ci/test/cnxk-tests/meson.build
+++ b/marvell-ci/test/cnxk-tests/meson.build
@@ -73,6 +73,7 @@ test_subdirs = [
         'cman_test',
         'multi_pool_pkt_tx',
         'flow_ctrl',
+        'multi_mempool',
 ]
 
 foreach dir:test_subdirs
diff --git a/marvell-ci/test/cnxk-tests/multi_mempool/cnxk_multi_mempool.sh b/marvell-ci/test/cnxk-tests/multi_mempool/cnxk_multi_mempool.sh
new file mode 100755
index 0000000000000..0a9a46aad996f
--- /dev/null
+++ b/marvell-ci/test/cnxk-tests/multi_mempool/cnxk_multi_mempool.sh
@@ -0,0 +1,148 @@
+#!/bin/bash
+# SPDX-License-Identifier: BSD-3-Clause
+# Copyright(C) 2022 Marvell.
+
+# This script verifies multi-mempool capability by sending two
+# packets with one packet size 128B and the other with 4496B.
+#
+# Here, two pools are created with sizes, 6000B & 3000B, allowing
+# PMD to configure LPB with 5000B  and SPB with 3000B.
+#
+# Multiple mempool test case will be successful when 128B packet is
+# allocated from SPB pool and 4496B packet from LPB pool.
+
+set -e
+
+CNXKTESTPATH="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )/.."
+
+source $CNXKTESTPATH/common/testpmd/common.env
+source $CNXKTESTPATH/common/pcap/pcap.env
+
+PRFX="mempool"
+CAP_PRFX="mempool_cap"
+
+TX_PCAP="$CNXKTESTPATH/multi_mempool/in.pcap"
+RECV_PCAP="recv.pcap"
+PORT0="0002:01:00.1"
+PORT1="--vdev net_pcap0,rx_pcap=$TX_PCAP"
+INLINE_DEV="0002:1d:00.0"
+PORT2="-a $INLINE_DEV"
+CAP_PORT0="0002:01:00.2"
+COREMASK="0x3"
+CAP_COREMASK="0xc"
+OFF=0
+
+if [ -f $CNXKTESTPATH/../board/oxk-devbind-basic.sh ]
+then
+        VFIO_DEVBIND="$CNXKTESTPATH/../board/oxk-devbind-basic.sh"
+else
+        VFIO_DEVBIND=$(which oxk-devbind-basic.sh)
+        if [[ -z $VFIO_DEVBIND ]]; then
+                echo "oxk-devbind-basic.sh not found !!"
+                exit 1
+        fi
+fi
+
+$VFIO_DEVBIND -b vfio-pci $PORT0 $CAP_PORT0
+
+function sig_handler()
+{
+	local status=$?
+	set +e
+	trap - ERR
+	trap - INT
+	trap - QUIT
+	trap - EXIT
+	if [[ $status -ne 0 ]]; then
+		echo "$1 Handler"
+		# Dump error logs
+		testpmd_log_off $PRFX $OFF
+		testpmd_log_off $CAP_PRFX $OFF
+	fi
+
+	testpmd_cleanup $PRFX
+	testpmd_cleanup $CAP_PRFX
+	exit $status
+}
+
+trap "sig_handler ERR" ERR
+trap "sig_handler INT" INT
+trap "sig_handler QUIT" QUIT
+trap "sig_handler EXIT" EXIT
+
+function start_capture()
+{
+	testpmd_cmd $CAP_PRFX "set verbose 9"
+	testpmd_cmd $CAP_PRFX "port start all"
+	testpmd_cmd $CAP_PRFX "start"
+
+	testpmd_cmd $PRFX "set verbose 9"
+	testpmd_cmd $PRFX "port start all"
+	testpmd_cmd_refresh $PRFX "start"
+}
+
+function stop_capture()
+{
+	testpmd_cmd $PRFX "stop"
+	testpmd_cmd $PRFX "port stop all"
+
+	testpmd_cmd $CAP_PRFX "stop"
+	testpmd_cmd $CAP_PRFX "port stop all"
+}
+
+echo "Testpmd running with $PORT0, $PORT1, Coremask=$COREMASK"
+testpmd_launch $PRFX \
+	"-c $COREMASK -a $PORT0	$PORT1" \
+	"--nb-cores=1 --no-flush-rx --max-pkt-len=9600"
+
+testpmd_cmd $PRFX "port stop all"
+testpmd_cmd $PRFX "stop"
+
+echo "Testpmd running with $CAP_PORT0, Coremask=$CAP_COREMASK"
+# Here, LPB pool is going to be the first pool, mb_pool_0, and
+# the second pool, mb_pool_0_1, is going to be SPB pool.
+testpmd_launch $CAP_PRFX \
+		"-c $CAP_COREMASK -a $CAP_PORT0" \
+		"--portmask=1 --nb-cores=1 --no-flush-rx --mbuf-size 6000,3000 --max-pkt-len=9600 --multi-rx-mempool"
+
+testpmd_cmd $CAP_PRFX "port stop all"
+testpmd_cmd $CAP_PRFX "stop"
+
+echo "start capture"
+#Start capturing
+start_capture
+
+sleep 2
+
+echo "stop capture"
+#Stop capturing
+stop_capture
+
+#confirm large packet came from LPB and small packet from SPB
+#first rx packet
+spb_pool=`testpmd_log_off $CAP_PRFX $OFF | grep -ao ".* - Receive" \
+	 | grep -ao -m 1 "pool=.* " | cut -d " " -f 1 \
+	 | cut -d "=" -f 2`
+
+len1=`testpmd_log_off $CAP_PRFX $OFF | grep -ao ".* - Receive" \
+     | grep -ao -m 1 "length=.* " | cut -d " " -f 1 \
+     | cut -d "=" -f 2`
+
+#second rx packet
+lpb_pool=`testpmd_log_off $CAP_PRFX $OFF | grep -ao ".* - Receive" \
+	 | grep -ao -m 2  "pool=.* " | tail -n 1 | cut -d " " -f 1 \
+	 | cut -d "=" -f 2`
+
+len2=`testpmd_log_off $CAP_PRFX $OFF | grep -ao ".* - Receive" \
+     | grep -ao -m 3 "length=.* " | tail -n 1 | cut -d " " -f 1 \
+     | cut -d "=" -f 2`
+
+echo "lpb:$lpb_pool lpb-len:$len2 spb:$spb_pool spb-len:$len1"
+
+if [[ $spb_pool != "mb_pool_0_1" ]] || [[ $lpb_pool != "mb_pool_0" ]]
+then
+	echo "FAILURE: packets assigned from invali pools"
+	exit 1
+fi
+
+echo "SUCCESS: Multiple mempool test case completed!"
diff --git a/marvell-ci/test/cnxk-tests/multi_mempool/in.pcap b/marvell-ci/test/cnxk-tests/multi_mempool/in.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..166f5e68a8c840e21ce72246a1f1ce50ceb1a219
GIT binary patch
literal 4680
zcmca|c+)~A1{MYcU}0bca_$(LCe2CbWM}}gL0Ab4jKP3|!Igob2q?(l@c+}L11lI9
zjtMa^B!C18j2u7|1pNQc#lXM><1sLR`Heun1`so`pFi9!DRnvVbkJ(W@1eeBKA#t@
z{IKEB*2O!Vnl~~FIj62KncRK8?ug@#Imb?(`UrH7$PQ+P34#n@jP4%6CXhW2{~sQr
zk9#b_k~J!H9_ssEs`+MC#1qp}@IdKSLe2g+k6SKse!K1OPziF+C>RZa(GVC7fzc2c
i4S~@R7!85Z5Eu=C(GVC7fzc2c4S~@R7!85p69NEiwP`f~

literal 0
HcmV?d00001

diff --git a/marvell-ci/test/cnxk-tests/multi_mempool/meson.build b/marvell-ci/test/cnxk-tests/multi_mempool/meson.build
new file mode 100644
index 0000000000000..3b5ef214b8c8a
--- /dev/null
+++ b/marvell-ci/test/cnxk-tests/multi_mempool/meson.build
@@ -0,0 +1,33 @@
+# SPDX-License-Identifier: BSD-3-Clause
+# Copyright(C) 2022 Marvell.
+
+# Test script
+test_script = 'cnxk_multi_mempool.sh'
+
+# Test name
+test_name = 'cnxk_multi_mempool'
+
+# Test arguments
+test_args = ''
+
+# Test directory name relative to build directory.
+test_dir = meson.current_build_dir()
+
+# Copy the required scripts to build directory.
+run_command(copy_data, test_script)
+run_command(copy_data, 'in.pcap')
+
+# Add the meson test
+test(
+    test_name,
+    cnxk_test_script_wrapper,
+    env : ['DPDK_TEST=' + test_name, 'TEST_DIR=' + test_dir],
+    args : [test_script, test_args],
+    is_parallel : false,
+    suite : 'cnxk-tests')
+
+# Install the sample script
+install_data(
+    test_script,
+    install_mode : 'rwxr-xr-x',
+    install_dir : 'bin/cnxk/multi_mempool')
diff --git a/marvell-ci/test/env/cn9k.env b/marvell-ci/test/env/cn9k.env
index 00e8ff2d03737..b7ef62d414fc0 100644
--- a/marvell-ci/test/env/cn9k.env
+++ b/marvell-ci/test/env/cn9k.env
@@ -109,6 +109,7 @@ DEFAULT_SKIP_TESTS="
 	cnxk_ipsec_reassembly_perf
 	cnxk_multi_pool_pkt_tx
 	cnxk_multi_pool_pkt_tx_scalar
+	cnxk_multi_mempool
 	${FIXME_SKIP_TESTS}
 "
 
-- 
2.25.1

