From 98475d84b2510cee237ab644a45f5a7a86cd4db5 Mon Sep 17 00:00:00 2001
From: Anoob Joseph <anoobj@marvell.com>
Date: Mon, 17 Apr 2023 09:30:42 +0000
Subject: [PATCH 458/955] app/crypto-perf: check crypto result

Check crypto result in latency tests. Checking result won't affect the
test results as latency is calculated using timestamps which are done
before enqueue and after dequeue. Ignoring result means the data can be
false positive.

Signed-off-by: Anoob Joseph <anoobj@marvell.com>
Change-Id: I5157203bfe23a4be8e92441271f5cabd7b7a8897
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/dataplane/dpdk/+/101548
Base-Builds: sa_ip-toolkits-Jenkins <sa_ip-toolkits-jenkins@marvell.com>
Base-Tests: sa_ip-toolkits-Jenkins <sa_ip-toolkits-jenkins@marvell.com>
Tested-by: sa_ip-toolkits-Jenkins <sa_ip-toolkits-jenkins@marvell.com>
(cherry picked from commit cce1645fca9be71267498e841af14104809a8b66)
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/dataplane/dpdk/+/104132
---
 app/test-crypto-perf/cperf_test_latency.c | 23 ++++++++++++++++++++---
 1 file changed, 20 insertions(+), 3 deletions(-)

diff --git a/app/test-crypto-perf/cperf_test_latency.c b/app/test-crypto-perf/cperf_test_latency.c
index 406e082e4e204..f1676a9aa9420 100644
--- a/app/test-crypto-perf/cperf_test_latency.c
+++ b/app/test-crypto-perf/cperf_test_latency.c
@@ -134,6 +134,7 @@ cperf_latency_test_runner(void *arg)
 	uint16_t test_burst_size;
 	uint8_t burst_size_idx = 0;
 	uint32_t imix_idx = 0;
+	int ret = 0;
 
 	static uint16_t display_once;
 
@@ -258,10 +259,16 @@ cperf_latency_test_runner(void *arg)
 			}
 
 			if (likely(ops_deqd))  {
-				/* Free crypto ops so they can be reused. */
-				for (i = 0; i < ops_deqd; i++)
+				for (i = 0; i < ops_deqd; i++) {
+					struct rte_crypto_op *op = ops_processed[i];
+
+					if (op->status != RTE_CRYPTO_OP_STATUS_SUCCESS)
+						ret = -1;
+
 					store_timestamp(ops_processed[i], tsc_end);
+				}
 
+				/* Free crypto ops so they can be reused. */
 				rte_mempool_put_bulk(ctx->pool,
 						(void **)ops_processed, ops_deqd);
 
@@ -289,8 +296,14 @@ cperf_latency_test_runner(void *arg)
 			tsc_end = rte_rdtsc_precise();
 
 			if (ops_deqd != 0) {
-				for (i = 0; i < ops_deqd; i++)
+				for (i = 0; i < ops_deqd; i++) {
+					struct rte_crypto_op *op = ops_processed[i];
+
+					if (op->status != RTE_CRYPTO_OP_STATUS_SUCCESS)
+						ret = -1;
+
 					store_timestamp(ops_processed[i], tsc_end);
+				}
 
 				rte_mempool_put_bulk(ctx->pool,
 						(void **)ops_processed, ops_deqd);
@@ -301,6 +314,10 @@ cperf_latency_test_runner(void *arg)
 			}
 		}
 
+		/* If there was any failure in crypto op, exit */
+		if (ret)
+			return ret;
+
 		for (i = 0; i < tsc_idx; i++) {
 			tsc_val = ctx->res[i].tsc_end - ctx->res[i].tsc_start;
 			tsc_max = RTE_MAX(tsc_val, tsc_max);
-- 
2.25.1

