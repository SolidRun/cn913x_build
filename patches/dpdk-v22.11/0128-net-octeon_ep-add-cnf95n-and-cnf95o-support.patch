From fcdcc5cbb6a4bac2f7ac873034ccd78ae882fddb Mon Sep 17 00:00:00 2001
From: Sathesh Edara <sedara@marvell.com>
Date: Fri, 30 Dec 2022 06:45:50 -0800
Subject: [PATCH 128/955] net/octeon_ep: add cnf95n and cnf95o support

add CNF95N and CNF95O PCI Endpoint devices
support in the driver.

Signed-off-by: Sathesh Edara <sedara@marvell.com>
Change-Id: If4142cb2bf0b5134a7deab97afabe6d8de872bfd
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/dataplane/dpdk/+/93425
Tested-by: Satananda Burla <sburla@marvell.com>
Reviewed-by: Veerasenareddy Burru <vburru@marvell.com>
---
 drivers/net/octeon_ep/otx2_ep_vf.h    |  2 ++
 drivers/net/octeon_ep/otx_ep_ethdev.c | 14 +++++++++++---
 2 files changed, 13 insertions(+), 3 deletions(-)

diff --git a/drivers/net/octeon_ep/otx2_ep_vf.h b/drivers/net/octeon_ep/otx2_ep_vf.h
index becda4c77f961..815cba4888834 100644
--- a/drivers/net/octeon_ep/otx2_ep_vf.h
+++ b/drivers/net/octeon_ep/otx2_ep_vf.h
@@ -115,6 +115,8 @@
 
 #define PCI_DEVID_OCTEONTX2_EP_NET_VF		0xB203 /* OCTEON 9 EP mode */
 #define PCI_DEVID_CN98XX_EP_NET_VF		0xB103
+#define PCI_DEVID_CNF95N_EP_NET_VF		0xB403
+#define PCI_DEVID_CNF95O_EP_NET_VF		0xB603
 
 int
 otx2_ep_vf_setup_device(struct otx_ep_device *sdpvf);
diff --git a/drivers/net/octeon_ep/otx_ep_ethdev.c b/drivers/net/octeon_ep/otx_ep_ethdev.c
index aa13801615517..ae4386006c0fb 100644
--- a/drivers/net/octeon_ep/otx_ep_ethdev.c
+++ b/drivers/net/octeon_ep/otx_ep_ethdev.c
@@ -106,6 +106,8 @@ otx_ep_chip_specific_setup(struct otx_ep_device *otx_epvf)
 		break;
 	case PCI_DEVID_OCTEONTX2_EP_NET_VF:
 	case PCI_DEVID_CN98XX_EP_NET_VF:
+	case PCI_DEVID_CNF95N_EP_NET_VF:
+	case PCI_DEVID_CNF95O_EP_NET_VF:
 		otx_epvf->chip_id = dev_id;
 		ret = otx2_ep_vf_setup_device(otx_epvf);
 		otx_epvf->fn_list.disable_io_queues(otx_epvf);
@@ -145,7 +147,9 @@ otx_epdev_init(struct otx_ep_device *otx_epvf)
 	if (otx_epvf->chip_id == PCI_DEVID_OCTEONTX_EP_VF)
 		otx_epvf->eth_dev->tx_pkt_burst = &otx_ep_xmit_pkts;
 	else if (otx_epvf->chip_id == PCI_DEVID_OCTEONTX2_EP_NET_VF ||
-		 otx_epvf->chip_id == PCI_DEVID_CN98XX_EP_NET_VF)
+		 otx_epvf->chip_id == PCI_DEVID_CN98XX_EP_NET_VF ||
+		 otx_epvf->chip_id == PCI_DEVID_CNF95N_EP_NET_VF ||
+		 otx_epvf->chip_id == PCI_DEVID_CNF95O_EP_NET_VF)
 		otx_epvf->eth_dev->tx_pkt_burst = &otx2_ep_xmit_pkts;
 	else if (otx_epvf->chip_id == PCI_DEVID_CNXK_EP_NET_VF)
 		otx_epvf->eth_dev->tx_pkt_burst = &otx2_ep_xmit_pkts;
@@ -544,8 +548,10 @@ otx_ep_eth_dev_init(struct rte_eth_dev *eth_dev)
 	otx_epvf->pdev = pdev;
 
 	otx_epdev_init(otx_epvf);
-	if (pdev->id.device_id == PCI_DEVID_OCTEONTX2_EP_NET_VF ||
-	    pdev->id.device_id == PCI_DEVID_CN98XX_EP_NET_VF) {
+	if (otx_epvf->chip_id == PCI_DEVID_OCTEONTX2_EP_NET_VF ||
+	    otx_epvf->chip_id == PCI_DEVID_CN98XX_EP_NET_VF ||
+	    otx_epvf->chip_id == PCI_DEVID_CNF95N_EP_NET_VF ||
+	    otx_epvf->chip_id == PCI_DEVID_CNF95O_EP_NET_VF) {
 		if (otx_epvf->sdp_packet_mode == SDP_PACKET_MODE_NIC)
 			otx_epvf->pkind = SDP_OTX2_PKIND_FS24;
 		else
@@ -579,6 +585,8 @@ static const struct rte_pci_id pci_id_otx_ep_map[] = {
 	{ RTE_PCI_DEVICE(PCI_VENDOR_ID_CAVIUM, PCI_DEVID_OCTEONTX_EP_VF) },
 	{ RTE_PCI_DEVICE(PCI_VENDOR_ID_CAVIUM, PCI_DEVID_OCTEONTX2_EP_NET_VF) },
 	{ RTE_PCI_DEVICE(PCI_VENDOR_ID_CAVIUM, PCI_DEVID_CN98XX_EP_NET_VF) },
+	{ RTE_PCI_DEVICE(PCI_VENDOR_ID_CAVIUM, PCI_DEVID_CNF95N_EP_NET_VF) },
+	{ RTE_PCI_DEVICE(PCI_VENDOR_ID_CAVIUM, PCI_DEVID_CNF95O_EP_NET_VF) },
 	{ RTE_PCI_DEVICE(PCI_VENDOR_ID_CAVIUM, PCI_DEVID_CNXK_EP_NET_VF) },
 	{ .vendor_id = 0, /* sentinel */ }
 };
-- 
2.25.1

