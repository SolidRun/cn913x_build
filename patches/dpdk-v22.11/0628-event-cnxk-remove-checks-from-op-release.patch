From 3020993b27f259459fa89b70ad9ade3a5f110a5f Mon Sep 17 00:00:00 2001
From: Pavan Nikhilesh <pbhagavatula@marvell.com>
Date: Mon, 24 Jul 2023 14:20:54 +0530
Subject: [PATCH 628/955] event/cnxk: remove checks from op release

Remove expensive fastpath checks from op release, remove
explicit release in CN9K tx routine.

Signed-off-by: Pavan Nikhilesh <pbhagavatula@marvell.com>
Change-Id: I0fb86e896eff93c25bbe3109fc6ce6b451146927
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/dataplane/dpdk/+/111107
Base-Builds: sa_ip-toolkits-Jenkins <sa_ip-toolkits-jenkins@marvell.com>
Tested-by: sa_ip-toolkits-Jenkins <sa_ip-toolkits-jenkins@marvell.com>
Reviewed-by: Jerin Jacob Kollanukkaran <jerinj@marvell.com>
---
 drivers/event/cnxk/cn9k_worker.h | 17 -----------------
 drivers/event/cnxk/cnxk_worker.h |  6 ------
 2 files changed, 23 deletions(-)

diff --git a/drivers/event/cnxk/cn9k_worker.h b/drivers/event/cnxk/cn9k_worker.h
index 33e819a3b21de..8d14116ac6bcd 100644
--- a/drivers/event/cnxk/cn9k_worker.h
+++ b/drivers/event/cnxk/cn9k_worker.h
@@ -156,15 +156,6 @@ cn9k_sso_hws_dual_forward_event(struct cn9k_sso_hws_dual *dws, uint64_t base,
 	}
 }
 
-static __rte_always_inline void
-cn9k_sso_tx_tag_flush(uint64_t base)
-{
-	if (unlikely(CNXK_TT_FROM_TAG(plt_read64(base + SSOW_LF_GWS_TAG)) ==
-		     SSO_TT_EMPTY))
-		return;
-	plt_write64(0, base + SSOW_LF_GWS_OP_SWTAG_FLUSH);
-}
-
 static __rte_always_inline void
 cn9k_wqe_to_mbuf(uint64_t wqe, const uint64_t mbuf, uint8_t port_id,
 		 const uint32_t tag, const uint32_t flags,
@@ -754,7 +745,6 @@ cn9k_sso_hws_event_tx(uint64_t base, struct rte_event *ev, uint64_t *cmd,
 		      uint64_t *txq_data, const uint32_t flags)
 {
 	struct rte_mbuf *m = ev->mbuf;
-	uint16_t ref_cnt = m->refcnt;
 	struct cn9k_eth_txq *txq;
 
 	/* Perform header writes before barrier for TSO */
@@ -827,13 +817,6 @@ cn9k_sso_hws_event_tx(uint64_t base, struct rte_event *ev, uint64_t *cmd,
 	}
 
 done:
-	if (flags & NIX_TX_OFFLOAD_MBUF_NOFF_F) {
-		if (ref_cnt > 1)
-			return 1;
-	}
-
-	cn9k_sso_tx_tag_flush(base);
-
 	return 1;
 }
 
diff --git a/drivers/event/cnxk/cnxk_worker.h b/drivers/event/cnxk/cnxk_worker.h
index 2bd41f8a5ed55..0e0d728ba4c57 100644
--- a/drivers/event/cnxk/cnxk_worker.h
+++ b/drivers/event/cnxk/cnxk_worker.h
@@ -54,12 +54,6 @@ cnxk_sso_hws_swtag_untag(uintptr_t swtag_untag_op)
 static __rte_always_inline void
 cnxk_sso_hws_swtag_flush(uint64_t base)
 {
-	/* Ensure that there is no previous flush is pending. */
-	while (plt_read64(base + SSOW_LF_GWS_PENDSTATE) & BIT_ULL(56))
-		;
-	if (CNXK_TT_FROM_TAG(plt_read64(base + SSOW_LF_GWS_TAG)) ==
-	    SSO_TT_EMPTY)
-		return;
 	plt_write64(0, base + SSOW_LF_GWS_OP_SWTAG_FLUSH);
 }
 
-- 
2.25.1

