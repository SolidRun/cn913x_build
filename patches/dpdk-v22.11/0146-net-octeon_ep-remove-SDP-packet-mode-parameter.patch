From 3f70ca92a671850dcb4a16444348f109b1b46846 Mon Sep 17 00:00:00 2001
From: Sathesh Edara <sedara@marvell.com>
Date: Mon, 2 Jan 2023 08:04:30 -0800
Subject: [PATCH 146/955] net/octeon_ep: remove SDP packet mode parameter

remove SDP packet mode parameter

Signed-off-by: Sathesh Edara <sedara@marvell.com>
Change-Id: Ib1b3a22e9101f6f80be045d041e536a20799fa79
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/dataplane/dpdk/+/93519
Tested-by: sa_ip-toolkits-Jenkins <sa_ip-toolkits-jenkins@marvell.com>
Reviewed-by: Veerasenareddy Burru <vburru@marvell.com>
---
 drivers/net/octeon_ep/otx_ep_ethdev.c | 44 +--------------------------
 1 file changed, 1 insertion(+), 43 deletions(-)

diff --git a/drivers/net/octeon_ep/otx_ep_ethdev.c b/drivers/net/octeon_ep/otx_ep_ethdev.c
index 129db190aed7d..014bb1fc55a0e 100644
--- a/drivers/net/octeon_ep/otx_ep_ethdev.c
+++ b/drivers/net/octeon_ep/otx_ep_ethdev.c
@@ -632,47 +632,6 @@ otx_ep_eth_dev_uninit(struct rte_eth_dev *eth_dev)
 	return 0;
 }
 
-static inline int
-otx_ep_parse_parameters(struct rte_eth_dev *dev)
-{
-	int ret = 0;
-	unsigned int i;
-	struct rte_kvargs *kvlist;
-	static const char *const params[] = {
-		SDP_PACKET_MODE_PARAM,
-		NULL};
-	struct otx_ep_device *otx_ep_dev = OTX_EP_DEV(dev);
-
-	/* Default to NIC mode */
-	otx_ep_dev->sdp_packet_mode = SDP_PACKET_MODE_NIC;
-
-	kvlist = rte_kvargs_parse(dev->device->devargs->args, params);
-	if (!kvlist)
-		return -EINVAL;
-
-	if (kvlist->count == 0)
-		goto exit;
-
-	for (i = 0; i != kvlist->count; ++i) {
-		const struct rte_kvargs_pair *pair = &kvlist->pairs[i];
-
-		if (!strcmp(pair->key, SDP_PACKET_MODE_PARAM)) {
-			if (!strcmp(pair->value, "nic"))
-				otx_ep_dev->sdp_packet_mode =
-							SDP_PACKET_MODE_NIC;
-			else if (!strcmp(pair->value, "loop"))
-				otx_ep_dev->sdp_packet_mode =
-							SDP_PACKET_MODE_LOOP;
-			else
-				otx_ep_err("Invalid packet_mode: %s, defaulting to nic mode.\n",
-					   pair->value);
-		}
-	}
-
-exit:
-	rte_kvargs_free(kvlist);
-	return ret;
-}
 
 static int otx_ep_eth_dev_query_set_vf_mac(struct rte_eth_dev *eth_dev,
 					   struct rte_ether_addr *mac_addr)
@@ -716,7 +675,7 @@ otx_ep_eth_dev_init(struct rte_eth_dev *eth_dev)
 	if (rte_eal_process_type() != RTE_PROC_PRIMARY)
 		return 0;
 
-	otx_ep_parse_parameters(eth_dev);
+	otx_epvf->sdp_packet_mode = SDP_PACKET_MODE_LOOP;
 	rte_eth_copy_pci_info(eth_dev, pdev);
 
 	otx_epvf->eth_dev = eth_dev;
@@ -811,4 +770,3 @@ RTE_PMD_REGISTER_PCI(net_otx_ep, rte_otx_ep_pmd);
 RTE_PMD_REGISTER_PCI_TABLE(net_otx_ep, pci_id_otx_ep_map);
 RTE_PMD_REGISTER_KMOD_DEP(net_otx_ep, "* igb_uio | vfio-pci");
 RTE_LOG_REGISTER_DEFAULT(otx_net_ep_logtype, NOTICE);
-RTE_PMD_REGISTER_PARAM_STRING(net_otx_ep, SDP_PACKET_MODE_PARAM "=<string>");
-- 
2.25.1

