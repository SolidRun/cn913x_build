From dfb05692d933424cd8dc898027cf5984ae03fd4b Mon Sep 17 00:00:00 2001
From: Sunil Kumar Kori <skori@marvell.com>
Date: Wed, 17 May 2023 13:49:47 +0530
Subject: [PATCH 417/955] ci: update MAC tests for MTU change

Acceptable minimum HW frame size is reduced by 20 bytes to
support MACSec. Because of that script needs to be aligned
for its minimum and less than minimum size MTU.

Signed-off-by: Sunil Kumar Kori <skori@marvell.com>
Change-Id: I6be8604bcdd93b1c2d809ce16c876d11c781fb13
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/dataplane/dpdk/+/103603
Base-Builds: sa_ip-toolkits-Jenkins <sa_ip-toolkits-jenkins@marvell.com>
Base-Tests: sa_ip-toolkits-Jenkins <sa_ip-toolkits-jenkins@marvell.com>
Tested-by: sa_ip-toolkits-Jenkins <sa_ip-toolkits-jenkins@marvell.com>
Reviewed-by: Nithin Kumar Dabilpuram <ndabilpuram@marvell.com>
---
 .../test/cnxk-tests/mac_test/cnxk_mac_test.sh | 57 ++++++++++++-------
 marvell-ci/test/env/cn10k.env                 |  1 -
 marvell-ci/test/env/cn9k.env                  |  1 -
 3 files changed, 36 insertions(+), 23 deletions(-)

diff --git a/marvell-ci/test/cnxk-tests/mac_test/cnxk_mac_test.sh b/marvell-ci/test/cnxk-tests/mac_test/cnxk_mac_test.sh
index 0d625efd38e56..8a7fe50cdafbe 100755
--- a/marvell-ci/test/cnxk-tests/mac_test/cnxk_mac_test.sh
+++ b/marvell-ci/test/cnxk-tests/mac_test/cnxk_mac_test.sh
@@ -164,12 +164,13 @@ function macfltr_pkt_test_verify()
 	# the number of packets dropped.
 	pkt_drop=`expr $tx_count - $rx_count`
 
+	OFF=`testpmd_log_sz $PRFX`
 	testpmd_cmd $PRFX "show port xstats $MACFLTR_PORT_INDEX"
 	sleep 5
 	# cgx_rx_dmac_filt_pkts is xstats counter which counts the number of
 	# packets with MAC address are filtered and dropped. This is a hardware
 	# counter.
-	rx_filter_pkts_af=$(macfltr_dmac_filt_pkts)
+	rx_filter_pkts_af=$(macfltr_dmac_filt_pkts $OFF)
 	xstats_pkt_drop=`expr $rx_filter_pkts_af - $rx_filter_pkts`
 
 	# pcap contains 2 packets of the configured mcast mac address.
@@ -187,9 +188,10 @@ function check_port_status()
 	link_status=""
 	while [[ "$link_status" != " up" ]]
 	do
+		OFF=`testpmd_log_sz $PRFX`
 		testpmd_cmd $PRFX "show port info $1"
 		sleep 3
-		link_status=`testpmd_log $PRFX | tail -60 | \
+		link_status=`testpmd_log_off $PRFX $OFF | \
 			grep "Link status: " | cut --complement -f 1 -d ":"`
 		ts=`date +%s`
 		if (( $ts > $start_ts ))
@@ -229,7 +231,7 @@ function macfltr_dmac_filt_pkts()
 		cat /sys/kernel/debug/cn10k/rpm/rpm0/lmac0/mac_filter |\
 			 grep -a "DMAC filter drop count" | cut --complement -f 1 -d ":"
 	else
-		testpmd_log $PRFX | tail -62 |\
+		testpmd_log_off $PRFX $1 |\
 			grep -a "cgx_rx_dmac_filt_pkts: "|\
 			cut --complement -f 1 -d ":"
 	fi
@@ -237,14 +239,14 @@ function macfltr_dmac_filt_pkts()
 
 function macfltr_mac_cnt()
 {
-	testpmd_log $PRFX | tail -$MAC_UCAST_TAIL_LINES | \
+	testpmd_log_off $PRFX $1 | \
 		grep -a "Number of MAC address added: "| \
 		cut --complement -f 1 -d ":"
 }
 
 function macfltr_mcast_mac_cnt()
 {
-	testpmd_log $PRFX | tail -$MAC_MCAST_TAIL_LINES | \
+	testpmd_log_off $PRFX $1 | \
 		grep -a "Multicast MAC address added: "| \
 		cut --complement -f 1 -d ":"
 }
@@ -273,9 +275,10 @@ macfltr_launch -c $COREMASK -p $MACFLTR_PORT -i $UCAST_MAC_PCAP
 
 
 # Get MAX number of MAC's supported by the port.
+OFF=`testpmd_log_sz $PRFX`
 testpmd_cmd $PRFX "show port info $MACFLTR_PORT_INDEX"
 sleep 1
-NUM_MAX_MAC=`testpmd_log $PRFX | tail -57 | \
+NUM_MAX_MAC=`testpmd_log_off $PRFX $OFF | \
 	grep "Maximum number of MAC addresses: " | cut --complement -f 1 -d ":"`
 NUM_MAX_MAC=`expr $NUM_MAX_MAC - 1`
 
@@ -304,16 +307,18 @@ MAC_MCAST_TAIL_LINES=`expr $NUM_MAX_MCAST_MAC + 5`
 
 #Test-1: verify configuring default mac.
 echo "**** Test-1 Verify configuring default MAC address. ****"
+OFF=`testpmd_log_sz $PRFX`
 testpmd_cmd $PRFX "show device info $MACFLTR_PORT"
 sleep 1
-DEF_MAC=`testpmd_log $PRFX | tail -12 | grep "MAC address: " | \
+DEF_MAC=`testpmd_log_off $PRFX $OFF | grep "MAC address: " | \
 	cut --complement -f 1 -d ":"`
 
 testpmd_cmd_refresh $PRFX "mac_addr set $MACFLTR_PORT_INDEX ${UCAST_DMAC_ARR[0]}"
 
+OFF=`testpmd_log_sz $PRFX`
 testpmd_cmd $PRFX "show device info $MACFLTR_PORT"
 sleep 1
-NEW_MAC=`testpmd_log $PRFX | tail -12 | grep "MAC address: " | \
+NEW_MAC=`testpmd_log_off $PRFX $OFF | grep "MAC address: " | \
 	cut --complement -f 1 -d ":"`
 # The MAC address in show command are in upper case and the MAC address in the
 # MAC address list are in lower case. Hence to match it up nocasematch is used.
@@ -330,10 +335,11 @@ shopt -u nocasematch
 
 
 #Test-2: verify the packets after configuring default unicast mac address.
+OFF=`testpmd_log_sz $PRFX`
 echo "**** Test-2 Verify packets with unicast mac filter  ****"
 testpmd_cmd $PRFX "show port xstats $MACFLTR_PORT_INDEX"
 sleep 5
-rx_filter_pkts=$(macfltr_dmac_filt_pkts)
+rx_filter_pkts=$(macfltr_dmac_filt_pkts $OFF)
 macfltr_pkt_test $MACFLTR_PORT_INDEX ${UCAST_DMAC_ARR[0]} "unicast"
 echo "$rx_count packets with configured unicast MAC address \
 (${UCAST_DMAC_ARR[0]}) received successful."
@@ -348,6 +354,7 @@ testpmd_cmd_refresh $PRFX "mac_addr set $MACFLTR_PORT_INDEX $DEF_MAC"
 echo "Stop testpmd and exit."
 macfltr_cleanup
 
+OFF=`testpmd_log_sz $PRFX`
 echo "Starting unicast macfltr with port=$MACFLTR_PORT, poremask=$COREMASK"
 macfltr_launch -c $COREMASK -p $MACFLTR_PORT -i $UCAST_MAC_PCAP
 
@@ -362,9 +369,10 @@ do
 	let "mac+=1"
 done
 
+OFF=`testpmd_log_sz $PRFX`
 testpmd_cmd $PRFX "show port $MACFLTR_PORT_INDEX macs"
 sleep 1
-CNT=$(macfltr_mac_cnt)
+CNT=$(macfltr_mac_cnt $OFF)
 if [[ $CNT -eq $NUM_MAX_UCAST_MAC ]] || \
 	[[ $CNT -eq $(expr $NUM_MAX_UCAST_MAC - 1) ]]
 then
@@ -387,9 +395,10 @@ do
 	let "mac+=1"
 done
 
+OFF=`testpmd_log_sz $PRFX`
 testpmd_cmd $PRFX "show port $MACFLTR_PORT_INDEX macs"
 sleep 1
-CNT=$(macfltr_mac_cnt)
+CNT=$(macfltr_mac_cnt $OFF)
 if [[ $CNT -eq 1 ]]
 then
 	echo "Unicast MAC addresses remove successful"
@@ -402,9 +411,10 @@ fi
 
 #Test-5: verify the packets after configuring unicast mac address.
 echo "**** Test-5 Verify packets with unicast mac filter  ****"
+OFF=`testpmd_log_sz $PRFX`
 testpmd_cmd $PRFX "show port xstats $MACFLTR_PORT_INDEX"
 sleep 5
-rx_filter_pkts=$(macfltr_dmac_filt_pkts)
+rx_filter_pkts=$(macfltr_dmac_filt_pkts $OFF)
 macfltr_pkt_test $MACFLTR_PORT_INDEX ${UCAST_DMAC_ARR[1]} "unicast"
 echo "$rx_count packets with configured unicast MAC address \
 (${UCAST_DMAC_ARR[1]}) received successful."
@@ -430,9 +440,10 @@ do
 	let "mac+=1"
 done
 
+OFF=`testpmd_log_sz $PRFX`
 testpmd_cmd $PRFX "show port $MACFLTR_PORT_INDEX mcast_macs"
 sleep 1
-CNT=$(macfltr_mcast_mac_cnt)
+CNT=$(macfltr_mcast_mac_cnt $OFF)
 if [[ $CNT -eq $NUM_MAX_MAC ]] || [[ $CNT -eq $NUM_MAX_MCAST_MAC ]]
 then
 	echo "Total $CNT multicast MAC addresses add successful"
@@ -453,9 +464,10 @@ do
 	let "mac+=1"
 done
 
+OFF=`testpmd_log_sz $PRFX`
 testpmd_cmd $PRFX "show port $MACFLTR_PORT_INDEX mcast_macs"
 sleep 1
-CNT=$(macfltr_mcast_mac_cnt)
+CNT=$(macfltr_mcast_mac_cnt $OFF)
 if [[ $CNT -eq 0 ]]
 then
 	echo "Multicast MAC addresses remove successful"
@@ -468,9 +480,10 @@ fi
 
 #Test-8: verify the packets after configuring multicast mac address.
 echo "**** Test-8 Verify packets with mcast mac filter  ****"
+OFF=`testpmd_log_sz $PRFX`
 testpmd_cmd $PRFX "show port xstats $MACFLTR_PORT_INDEX"
 sleep 5
-rx_filter_pkts=$(macfltr_dmac_filt_pkts)
+rx_filter_pkts=$(macfltr_dmac_filt_pkts $OFF)
 macfltr_pkt_test $MACFLTR_PORT_INDEX ${MCAST_DMAC_ARR[0]} "mcast"
 echo "$rx_count packets with configured mcast MAC address \
 (${MCAST_DMAC_ARR[0]}) received successful."
@@ -481,12 +494,12 @@ macfltr_cleanup
 #Test-9: verify MTU configuration lesser than minimum.
 echo "Test-9: MTU lesser than min for port=$MACFLTR_PORT, coremask=$COREMASK"
 macfltr_launch -c $COREMASK -p $MACFLTR_PORT -i $MTU_64B_PCAP
-testpmd_cmd $PRFX "port config mtu $MACFLTR_PORT_INDEX 30"
+OFF=`testpmd_log_sz $PRFX`
+testpmd_cmd $PRFX "port config mtu $MACFLTR_PORT_INDEX 10"
 sleep 1
 
-STRING=`testpmd_log $PRFX | tail -12 | grep "MTU (30) < device min MTU"`
-echo $STRING
-if [[ $STRING != "MTU (30) < device min MTU (38) for port_id 0" ]]
+STRING=`testpmd_log_off $PRFX $OFF | grep "MTU (10) < device min MTU"`
+if [[ $STRING != "MTU (10) < device min MTU (18) for port_id 0" ]]
 then
 	echo "Test-9: MTU configuration lesser than minimum failed"
 	exit 1
@@ -552,10 +565,11 @@ sleep 1
 testpmd_cmd $PRFX "port start all"
 sleep 1
 
+OFF=`testpmd_log_sz $PRFX`
 testpmd_cmd $PRFX "show port info $MACFLTR_PORT_INDEX"
 sleep 1
 
-MAX_RX_LEN=`testpmd_log $PRFX | tail -57 | \
+MAX_RX_LEN=`testpmd_log_off $PRFX $OFF | \
 	grep "Maximum configurable length of RX packet: " |\
 	cut --complement -f 1 -d ":"`
 
@@ -583,10 +597,11 @@ macfltr_cleanup
 #Test-13: verify MTU configuration greater than maximum.
 echo "Test-13: MTU more than max for port=$MACFLTR_PORT, coremask=$COREMASK"
 macfltr_launch -c $COREMASK -p $MACFLTR_PORT -i $MTU_1518B_PCAP
+OFF=`testpmd_log_sz $PRFX`
 testpmd_cmd $PRFX "port config mtu $MACFLTR_PORT_INDEX 20000"
 sleep 1
 
-STRING=`testpmd_log $PRFX | tail -12 | grep "MTU (20000) > device max MTU" | cut -f 1 -d "."`
+STRING=`testpmd_log_off $PRFX $OFF | grep "MTU (20000) > device max MTU" | cut -f 1 -d "."`
 if [[ $STRING != "MTU (20000) > device max MTU ($MAX_MTU) for port_id 0" ]]
 then
 	echo "Test-13: MTU configuration more than maximum failed"
diff --git a/marvell-ci/test/env/cn10k.env b/marvell-ci/test/env/cn10k.env
index 16ab8399bc097..d4239bc2bda4a 100644
--- a/marvell-ci/test/env/cn10k.env
+++ b/marvell-ci/test/env/cn10k.env
@@ -71,7 +71,6 @@ TM_SETUP=${TM_SETUP:-}
 FIXME_SKIP_TESTS="
 	cnxk_mtr_test_config
 	cnxk_fc_test_config
-	cnxk_mac_test
 "
 
 DEFAULT_SKIP_TESTS="
diff --git a/marvell-ci/test/env/cn9k.env b/marvell-ci/test/env/cn9k.env
index b866c5e0397f5..c8916a111cc36 100644
--- a/marvell-ci/test/env/cn9k.env
+++ b/marvell-ci/test/env/cn9k.env
@@ -69,7 +69,6 @@ TM_SETUP=${TM_SETUP:-1}
 
 FIXME_SKIP_TESTS="
         cnxk_fc_test_config
-        cnxk_mac_test
 "
 
 
-- 
2.25.1

