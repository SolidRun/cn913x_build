From 84bc34daa33ffb9123c4c664e4db28c9b1c711d6 Mon Sep 17 00:00:00 2001
From: Amit Prakash Shukla <amitprakashs@marvell.com>
Date: Fri, 29 Sep 2023 17:20:47 +0530
Subject: [PATCH 730/955] eventdev/dma: support adapter runtime params

Added support to set and get runtime params for DMA adapter. The
parameters that can be set/get are defined in
struct rte_event_dma_adapter_runtime_params.

Signed-off-by: Amit Prakash Shukla <amitprakashs@marvell.com>
Change-Id: I38f577f889fd9c8e1d443003b718863524ab6aa0
---
 lib/eventdev/rte_event_dma_adapter.c | 93 ++++++++++++++++++++++++++++
 1 file changed, 93 insertions(+)

diff --git a/lib/eventdev/rte_event_dma_adapter.c b/lib/eventdev/rte_event_dma_adapter.c
index c3b014aaf9b05..632169a7c267c 100644
--- a/lib/eventdev/rte_event_dma_adapter.c
+++ b/lib/eventdev/rte_event_dma_adapter.c
@@ -1215,3 +1215,96 @@ rte_event_dma_adapter_stop(uint8_t id)
 {
 	return edma_adapter_ctrl(id, 0);
 }
+
+#define DEFAULT_MAX_NB 128
+
+int
+rte_event_dma_adapter_runtime_params_init(struct rte_event_dma_adapter_runtime_params *params)
+{
+	if (params == NULL)
+		return -EINVAL;
+
+	memset(params, 0, sizeof(*params));
+	params->max_nb = DEFAULT_MAX_NB;
+
+	return 0;
+}
+
+static int
+dma_adapter_cap_check(struct event_dma_adapter *adapter)
+{
+	uint32_t caps;
+	int ret;
+
+	if (!adapter->nb_vchanq)
+		return -EINVAL;
+
+	ret = rte_event_dma_adapter_caps_get(adapter->eventdev_id, adapter->next_dmadev_id, &caps);
+	if (ret) {
+		RTE_EDEV_LOG_ERR("Failed to get adapter caps dev %" PRIu8 " cdev %" PRIu8,
+				 adapter->eventdev_id, adapter->next_dmadev_id);
+		return ret;
+	}
+
+	if ((caps & RTE_EVENT_DMA_ADAPTER_CAP_INTERNAL_PORT_OP_FWD) ||
+	    (caps & RTE_EVENT_DMA_ADAPTER_CAP_INTERNAL_PORT_OP_NEW))
+		return -ENOTSUP;
+
+	return 0;
+}
+
+int
+rte_event_dma_adapter_runtime_params_set(uint8_t id,
+					 struct rte_event_dma_adapter_runtime_params *params)
+{
+	struct event_dma_adapter *adapter;
+	int ret;
+
+	EVENT_DMA_ADAPTER_ID_VALID_OR_ERR_RET(id, -EINVAL);
+
+	if (params == NULL) {
+		RTE_EDEV_LOG_ERR("params pointer is NULL\n");
+		return -EINVAL;
+	}
+
+	adapter = edma_id_to_adapter(id);
+	if (adapter == NULL)
+		return -EINVAL;
+
+	ret = dma_adapter_cap_check(adapter);
+	if (ret)
+		return ret;
+
+	rte_spinlock_lock(&adapter->lock);
+	adapter->max_nb = params->max_nb;
+	rte_spinlock_unlock(&adapter->lock);
+
+	return 0;
+}
+
+int
+rte_event_dma_adapter_runtime_params_get(uint8_t id,
+					 struct rte_event_dma_adapter_runtime_params *params)
+{
+	struct event_dma_adapter *adapter;
+	int ret;
+
+	EVENT_DMA_ADAPTER_ID_VALID_OR_ERR_RET(id, -EINVAL);
+
+	if (params == NULL) {
+		RTE_EDEV_LOG_ERR("params pointer is NULL\n");
+		return -EINVAL;
+	}
+
+	adapter = edma_id_to_adapter(id);
+	if (adapter == NULL)
+		return -EINVAL;
+
+	ret = dma_adapter_cap_check(adapter);
+	if (ret)
+		return ret;
+
+	params->max_nb = adapter->max_nb;
+
+	return 0;
+}
-- 
2.25.1

