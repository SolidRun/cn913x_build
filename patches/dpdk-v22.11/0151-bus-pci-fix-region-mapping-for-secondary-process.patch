From 22a6f84daa915e1a84b0d1fd9966becf2554063b Mon Sep 17 00:00:00 2001
From: Sunil Kumar Kori <skori@marvell.com>
Date: Fri, 13 Jan 2023 14:43:24 +0530
Subject: [PATCH 151/955] bus/pci: fix region mapping for secondary process

Region based mapping setup was missing for secondary process
which was causing this failure to start a DPDK secondary process.

Patch syncs mapping as with primary process.

Fixes: 326c4bc5eb07 ("bus/pci: support region based device mapping")

Signed-off-by: Sunil Kumar Kori <skori@marvell.com>
Change-Id: Ib239d9d52f9cb831cf13eb71de4cbc18e6719e7d
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/dataplane/dpdk/+/94491
Reviewed-by: Jerin Jacob Kollanukkaran <jerinj@marvell.com>
Tested-by: Jerin Jacob Kollanukkaran <jerinj@marvell.com>
---
 drivers/bus/pci/linux/pci_vfio.c | 22 ++++++++++++----------
 1 file changed, 12 insertions(+), 10 deletions(-)

diff --git a/drivers/bus/pci/linux/pci_vfio.c b/drivers/bus/pci/linux/pci_vfio.c
index 7c7ff4d9e091a..b7868a05c987a 100644
--- a/drivers/bus/pci/linux/pci_vfio.c
+++ b/drivers/bus/pci/linux/pci_vfio.c
@@ -980,19 +980,19 @@ pci_vfio_map_resource_secondary(struct rte_pci_device *dev)
 
 	/* map BARs */
 	maps = vfio_res->maps;
-	for (drv_reg = drv->regions; drv_reg->size != 0; drv_reg++)
-		drv_reg->mapped = false;
+	map_reg = drv->drv_flags & RTE_PCI_DRV_NEED_REGION_MAPPING ? true : false;
+	if (map_reg) {
+		for (drv_reg = drv->regions; drv_reg->size != 0; drv_reg++)
+			drv_reg->mapped = false;
+	}
 
 	for (i = 0; i < vfio_res->nb_maps; i++) {
 next_region:
-		if (drv->drv_flags & RTE_PCI_DRV_NEED_REGION_MAPPING &&
-		    drv->valid_bars[i] == true) {
-			map_reg = pci_device_get_region_info(drv, i, &offset, &size);
-			if (map_reg == false)
-				continue;
-			region = &vfio_res->regions[i][j];
-		}
+		if (map_reg && drv->valid_bars[i] == true &&
+		    (pci_device_get_region_info(drv, i, &offset, &size) == false))
+			continue;
 
+		region = &vfio_res->regions[i][j];
 		ret = pci_vfio_mmap_bar(vfio_dev_fd, vfio_res, i, j, map_reg,
 					MAP_FIXED);
 		if (ret < 0) {
@@ -1001,8 +1001,10 @@ pci_vfio_map_resource_secondary(struct rte_pci_device *dev)
 			goto err_vfio_dev_fd;
 		}
 
-		if (map_reg) {
+		if (map_reg && (drv->valid_bars[i] == true)) {
 			dev->regions[i][j].addr = region->addr;
+			dev->regions[i][j].len = region->size;
+			dev->regions[i][j].phys_addr += offset;
 			j++;
 			map_reg = false;
 			goto next_region;
-- 
2.25.1

