From e5d7aad0dd91ff8f2e08b9a38494c70695761f2b Mon Sep 17 00:00:00 2001
From: Allen Yan <yanwei@marvell.com>
Date: Tue, 7 Nov 2017 14:26:42 +0800
Subject: [PATCH 35/45] fix: usb: mv_u3d: add soft_reset after soft_disconnect
 for USB IP rev A0

Issue found when try to insmod and rmmod gadget driver multiple times on
Armada-3700 that use USB3 IP rev A0, time out warning will appear
occasionally.
To solve this issue the controller should be reset before re-programming
and re-connect after soft disconnect for USB IP rev A0.

Change-Id: I3fd793f7c3c554266e5eac953cb12c0e564f94b1
Signed-off-by: Allen Yan <yanwei@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/45965
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
---
 drivers/usb/gadget/udc/mvebu_u3d.c | 19 ++++++++++++++++++-
 drivers/usb/gadget/udc/mvebu_u3d.h |  1 +
 2 files changed, 19 insertions(+), 1 deletion(-)

diff --git a/drivers/usb/gadget/udc/mvebu_u3d.c b/drivers/usb/gadget/udc/mvebu_u3d.c
index c86577901bc1..4f18aa7b7331 100644
--- a/drivers/usb/gadget/udc/mvebu_u3d.c
+++ b/drivers/usb/gadget/udc/mvebu_u3d.c
@@ -2289,7 +2289,7 @@ void mvc2_usb2_operation(struct mvc2 *cp, int op)
 
 void mvc2_connect(struct mvc2 *cp, int is_on)
 {
-	unsigned int val;
+	unsigned int val, timeout = 5000;
 
 	if (is_on) {
 		val = MV_CP_READ(cp->reg->global_control);
@@ -2305,6 +2305,23 @@ void mvc2_connect(struct mvc2 *cp, int is_on)
 		val = MV_CP_READ(cp->reg->global_control);
 		val &= ~MVCP_GLOBAL_CONTROL_SOFT_CONNECT;
 		MV_CP_WRITE(val, cp->reg->global_control);
+
+		/* Due to differences between USB IP version A0 and above,
+		 * Soft reset after soft disconnect is acceptable according to HW SPEC
+		 * of the IP (Soft reset won't clean the configuration of link layer).
+		 */
+		if (cp->mvc2_version == USB3_IP_VER_A0) {
+			val = MV_CP_READ(MVCP_SOFTWARE_RESET);
+			val |= MVCP_SOFTWARE_RESET_EN;
+			MV_CP_WRITE(val, MVCP_SOFTWARE_RESET);
+			/* Check soft reset is done or not for 5000 cycles time*/
+			while (timeout-- > 0) {
+				val = MV_CP_READ(MVCP_SOFTWARE_RESET);
+				if (!(val & MVCP_SOFTWARE_RESET_EN))
+					break;
+				cpu_relax();
+			}
+		}
 	}
 }
 
diff --git a/drivers/usb/gadget/udc/mvebu_u3d.h b/drivers/usb/gadget/udc/mvebu_u3d.h
index b49e900fa758..3e75bf4e47de 100644
--- a/drivers/usb/gadget/udc/mvebu_u3d.h
+++ b/drivers/usb/gadget/udc/mvebu_u3d.h
@@ -73,6 +73,7 @@
 #define MVCP_POWER_MANAGEMENT_SOC       0xCC
 #define MVCP_LOW_POWER_STATUS           0xD0
 #define MVCP_SOFTWARE_RESET             0xD4
+	#define MVCP_SOFTWARE_RESET_EN		(0x1<<0)
 
 #define MVCP_TOP_INT_STATUS		0xD8
 	#define MVCP_TOP_INT_SS_EP		(0x1<<6)
-- 
2.35.3

