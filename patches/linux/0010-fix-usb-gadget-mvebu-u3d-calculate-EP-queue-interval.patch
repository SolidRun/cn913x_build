From 470f8110ebf759c6d4d9c6c9d48c27584a71cda9 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Tue, 21 Jun 2016 10:58:19 +0300
Subject: [PATCH 10/45] fix: usb: gadget: mvebu-u3d: calculate EP queue
 interval according to BD struct size

bd_interval was calculated originally according to sizeof(bd).

This was correct for a 32bit machine since size of pointer was 0x4,
deriving 0x10 interval, which is the bd struct size.

In 64bit machine it derived 0x8 * 4 = 0x20, which is twice the
bd struct size.
This miscalculation also exceeded coherent dma allocations,
which are correct, since allocated according to bd struct size.

The correct interval is now calculated with sizeof(struct bd).

Change-Id: I794388f29e8c8ff77917fb48e2d078e3962d021b
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/32808
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
---
 drivers/usb/gadget/udc/mvebu_u3d.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/drivers/usb/gadget/udc/mvebu_u3d.c b/drivers/usb/gadget/udc/mvebu_u3d.c
index ad844847b454..6ca88831e711 100644
--- a/drivers/usb/gadget/udc/mvebu_u3d.c
+++ b/drivers/usb/gadget/udc/mvebu_u3d.c
@@ -346,7 +346,8 @@ int eps_init(struct mvc2 *cp)
 	struct bd *bd;
 	unsigned int phys, bd_interval;
 
-	bd_interval = sizeof(bd) * 4;
+	bd_interval = sizeof(struct bd);
+
 	/* initialize endpoints */
 	for (i = 0; i < cp->epnum * 2; i++) {
 		ep = &cp->eps[i];
-- 
2.35.3

