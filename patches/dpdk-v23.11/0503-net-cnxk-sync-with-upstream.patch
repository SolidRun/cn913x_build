From 2fa472dc57033a7fdaa2082798dd2a07406a2fb2 Mon Sep 17 00:00:00 2001
From: Nithin Dabilpuram <ndabilpuram@marvell.com>
Date: Fri, 20 Sep 2024 11:15:47 +0530
Subject: [PATCH 503/513] net/cnxk: sync with upstream

Change-Id: I12ffdf273c13a24d6ae585444c892456698ed5c3
Signed-off-by: Nithin Dabilpuram <ndabilpuram@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/dataplane/dpdk/+/135981
Base-Builds: sa_ip-toolkits-Jenkins <sa_ip-toolkits-jenkins@marvell.com>
Base-Tests: sa_ip-toolkits-Jenkins <sa_ip-toolkits-jenkins@marvell.com>
Tested-by: sa_ip-toolkits-Jenkins <sa_ip-toolkits-jenkins@marvell.com>
Reviewed-by: Jerin Jacob <jerinj@marvell.com>
---
 drivers/common/cnxk/roc_nix_queue.c |  3 ++-
 drivers/net/cnxk/cn10k_tx.h         |  2 +-
 drivers/net/cnxk/cn9k_tx.h          |  2 +-
 drivers/net/cnxk/rte_pmd_cnxk.h     | 12 ++++++++++++
 4 files changed, 16 insertions(+), 3 deletions(-)

diff --git a/drivers/common/cnxk/roc_nix_queue.c b/drivers/common/cnxk/roc_nix_queue.c
index 1c8b237a8afe3..e852211ba4a1f 100644
--- a/drivers/common/cnxk/roc_nix_queue.c
+++ b/drivers/common/cnxk/roc_nix_queue.c
@@ -1429,7 +1429,8 @@ sqb_pool_populate(struct roc_nix *roc_nix, struct roc_nix_sq *sq)
 	thr = PLT_DIV_CEIL((nb_sqb_bufs * ROC_NIX_SQB_THRESH), 100);
 	nb_sqb_bufs += NIX_SQB_PREFETCH;
 	/* Clamp up the SQB count */
-	nb_sqb_bufs = PLT_MIN(roc_nix->max_sqb_count, (uint16_t)PLT_MAX(NIX_DEF_SQB, nb_sqb_bufs));
+	nb_sqb_bufs = PLT_MAX(NIX_DEF_SQB, nb_sqb_bufs);
+	nb_sqb_bufs = PLT_MIN(roc_nix->max_sqb_count, (uint16_t)nb_sqb_bufs);
 
 	sq->nb_sqb_bufs = nb_sqb_bufs;
 	sq->sqes_per_sqb_log2 = (uint16_t)plt_log2_u32(sqes_per_sqb);
diff --git a/drivers/net/cnxk/cn10k_tx.h b/drivers/net/cnxk/cn10k_tx.h
index 84b08403c0236..7d9b259a5fb7e 100644
--- a/drivers/net/cnxk/cn10k_tx.h
+++ b/drivers/net/cnxk/cn10k_tx.h
@@ -1242,7 +1242,7 @@ cn10k_nix_xmit_prepare_tstamp(struct cn10k_eth_txq *txq, uintptr_t lmt_addr,
 		struct nix_send_mem_s *send_mem;
 
 		send_mem = (struct nix_send_mem_s *)(lmt + off);
-		/* Packets for which PKT_TX_IEEE1588_TMST is not set, tx tstamp
+		/* Packets for which RTE_MBUF_F_TX_IEEE1588_TMST is not set, Tx tstamp
 		 * should not be recorded, hence changing the alg type to
 		 * NIX_SENDMEMALG_SUB and also changing send mem addr field to
 		 * next 8 bytes as it corrupts the actual Tx tstamp registered
diff --git a/drivers/net/cnxk/cn9k_tx.h b/drivers/net/cnxk/cn9k_tx.h
index b56881c56160a..9370985864802 100644
--- a/drivers/net/cnxk/cn9k_tx.h
+++ b/drivers/net/cnxk/cn9k_tx.h
@@ -560,7 +560,7 @@ cn9k_nix_xmit_prepare_tstamp(struct cn9k_eth_txq *txq, uint64_t *cmd,
 
 		send_mem = (struct nix_send_mem_s *)(cmd + off);
 
-		/* Packets for which PKT_TX_IEEE1588_TMST is not set, tx tstamp
+		/* Packets for which RTE_MBUF_F_TX_IEEE1588_TMST is not set, Tx tstamp
 		 * should not be recorded, hence changing the alg type to
 		 * NIX_SENDMEMALG_SUB and also changing send mem addr field to
 		 * next 8 bytes as it corrupts the actual Tx tstamp registered
diff --git a/drivers/net/cnxk/rte_pmd_cnxk.h b/drivers/net/cnxk/rte_pmd_cnxk.h
index 826278a872746..a20b4f277dc46 100644
--- a/drivers/net/cnxk/rte_pmd_cnxk.h
+++ b/drivers/net/cnxk/rte_pmd_cnxk.h
@@ -479,25 +479,37 @@ union rte_pmd_cnxk_ipsec_hw_sa {
 
 /** CPT HW result format */
 union rte_pmd_cnxk_cpt_res_s {
+	/** CN10K CPT result */
 	struct rte_pmd_cpt_cn10k_res_s {
+		/** Completion code */
 		uint64_t compcode : 7;
+		/** Done interrupt */
 		uint64_t doneint : 1;
+		/** Microcode completion code */
 		uint64_t uc_compcode : 8;
+		/** Result length */
 		uint64_t rlen : 16;
+		/** SPI */
 		uint64_t spi : 32;
 
+		/** Extended sequence number */
 		uint64_t esn;
 	} cn10k;
 
+	/** CN9K CPT result */
 	struct rte_pmd_cpt_cn9k_res_s {
+		/** Completion code */
 		uint64_t compcode : 8;
+		/** Microcode completion code */
 		uint64_t uc_compcode : 8;
+		/** Done interrupt */
 		uint64_t doneint : 1;
 		uint64_t reserved_17_63 : 47;
 
 		uint64_t reserved_64_127;
 	} cn9k;
 
+	/** CPT RES */
 	uint64_t u64[2];
 };
 
-- 
2.25.1

