From 098d3b420b4ec4fab14bdb46ce7230382d173a7e Mon Sep 17 00:00:00 2001
From: Pavan Nikhilesh <pbhagavatula@marvell.com>
Date: Fri, 1 Mar 2024 16:33:11 +0530
Subject: [PATCH 256/513] config/arm: sync from upstream

Sync changes from upstream.

Signed-off-by: Pavan Nikhilesh <pbhagavatula@marvell.com>
Change-Id: I0f2ed2656567fefeb95de9db4ce82b6dad678710
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/dataplane/dpdk/+/122975
Base-Builds: sa_ip-toolkits-Jenkins <sa_ip-toolkits-jenkins@marvell.com>
Base-Tests: sa_ip-toolkits-Jenkins <sa_ip-toolkits-jenkins@marvell.com>
Reviewed-by: Jerin Jacob <jerinj@marvell.com>
Tested-by: Jerin Jacob <jerinj@marvell.com>
---
 config/arm/meson.build | 78 ++++++++++++++++++++----------------------
 1 file changed, 37 insertions(+), 41 deletions(-)

diff --git a/config/arm/meson.build b/config/arm/meson.build
index 2aaf78a81ac60..c1300a8ce8e26 100644
--- a/config/arm/meson.build
+++ b/config/arm/meson.build
@@ -17,7 +17,9 @@ flags_common = [
         #    ['RTE_ARM64_MEMCPY_ALIGN_MASK', 0xF],
         #    ['RTE_ARM64_MEMCPY_STRICT_ALIGN', false],
 
-        ['RTE_ARM_USE_WFE', false],
+        # Enable use of ARM wait for event instruction.
+        # ['RTE_ARM_USE_WFE', false],
+
         ['RTE_ARCH_ARM64', true],
         ['RTE_CACHE_LINE_SIZE', 128]
 ]
@@ -137,8 +139,9 @@ implementer_cavium = {
             'flags': flags_part_number_thunderx
         },
         '0xa3': {
+            'march': 'armv8-a',
+            'march_features': ['crc'],
             'mcpu': 'thunderxt83',
-            'compiler_options': ['-march=armv8-a+crc'],
             'flags': flags_part_number_thunderx
         },
         '0xaf': {
@@ -698,26 +701,36 @@ if update_flags
 
     machine_args = [] # Clear previous machine args
 
-    candidate_mcpu = ''
-    support_mcpu = false
-    if part_number_config.has_key('mcpu')
-        mcpu = part_number_config['mcpu']
-        if (cc.has_argument('-mcpu=' + mcpu))
-            candidate_mcpu = mcpu
-            support_mcpu = true
-        endif
+    march_features = []
+    if part_number_config.has_key('march_features')
+        march_features += part_number_config['march_features']
+    endif
+    if soc_config.has_key('extra_march_features')
+        march_features += soc_config['extra_march_features']
     endif
 
-    # probe supported archs and their features
+    candidate_mcpu = ''
     candidate_march = ''
-    supported_marchs = ['armv9-a', 'armv8.6-a', 'armv8.5-a', 'armv8.4-a',
-                        'armv8.3-a', 'armv8.2-a', 'armv8.1-a', 'armv8-a']
-    if part_number_config.has_key('march')
-        if part_number_config.get('force_march', false) or support_mcpu
-            if cc.has_argument('-march=' +  part_number_config['march'])
-                candidate_march = part_number_config['march']
+
+    if (part_number_config.has_key('mcpu') and
+        cc.has_argument('-mcpu=' + part_number_config['mcpu']))
+        candidate_mcpu = '-mcpu=' + part_number_config['mcpu']
+        foreach feature: march_features
+            if cc.has_argument('+'.join([candidate_mcpu, feature]))
+                candidate_mcpu = '+'.join([candidate_mcpu, feature])
+            else
+                warning('The compiler does not support feature @0@'
+                    .format(feature))
             endif
+        endforeach
+        machine_args += candidate_mcpu
+    elif part_number_config.has_key('march')
+        # probe supported archs and their features
+        if part_number_config.get('force_march', false)
+            candidate_march = part_number_config['march']
         else
+            supported_marchs = ['armv9-a', 'armv8.6-a', 'armv8.5-a', 'armv8.4-a', 'armv8.3-a',
+                                'armv8.2-a', 'armv8.1-a', 'armv8-a']
             check_compiler_support = false
             foreach supported_march: supported_marchs
                 if supported_march == part_number_config['march']
@@ -731,19 +744,14 @@ if update_flags
                     break
                 endif
             endforeach
+            if (part_number_config.has_key('fallback_march') and
+                candidate_march != part_number_config['march'] and
+                cc.has_argument('-march=' + part_number_config['fallback_march']))
+                    candidate_march = part_number_config['fallback_march']
+            endif
         endif
 
         if candidate_march != part_number_config['march']
-            if part_number_config.has_key('fallback_march') and not support_mcpu
-                fallback_march = part_number_config['fallback_march']
-                foreach supported_march: supported_marchs
-                    if (supported_march == fallback_march
-                        and cc.has_argument('-march=' + supported_march))
-                        candidate_march = supported_march
-                        break
-                    endif
-                endforeach
-            endif
             warning('Configuration march version is @0@, not supported.'
                     .format(part_number_config['march']))
             if candidate_march != ''
@@ -751,19 +759,8 @@ if update_flags
             endif
         endif
 
-        if candidate_march == '' and candidate_mcpu == ''
-            error('No suitable ARM march/mcpu version found.')
-        endif
-
         if candidate_march != ''
             candidate_march = '-march=' + candidate_march
-            march_features = []
-            if part_number_config.has_key('march_features')
-                march_features += part_number_config['march_features']
-            endif
-            if soc_config.has_key('extra_march_features')
-                march_features += soc_config['extra_march_features']
-            endif
             foreach feature: march_features
                 if cc.has_argument('+'.join([candidate_march, feature]))
                     candidate_march = '+'.join([candidate_march, feature])
@@ -776,9 +773,8 @@ if update_flags
         endif
     endif
 
-    if candidate_mcpu != ''
-        candidate_mcpu = '-mcpu=' + candidate_mcpu
-        machine_args += candidate_mcpu
+    if candidate_mcpu == '' and candidate_march == ''
+        error('No suitable ARM march/mcpu version found.')
     endif
 
     # apply supported compiler options
-- 
2.25.1

